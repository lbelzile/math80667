# Linear regression models

```{r}
#| label: setup
#| file: "_common.R"
#| include: true
#| message: false
```



The previous chapter dealt with factorial experiments in which all experimental factors are of interest. It is possible to use measurements concomitant to the data collection (for example, value to a test before we complete the group assignment for the manipulation) to get a measure of the relative strength of students. The more correlated these measures are with the response, the more we can explain the data. We then proceed with the random assignment of our experimental units to different conditions. 

Including covariates should in principle increase power and our ability to detect real differences due to experimental manipulations, provided the variables used as control are correlated with the response. Generally, they are not needed for valid inference, which is guaranteed by randomization, and shouldn't be used to assign treatment. Such designs are meant to reduce the error.

## Analysis of covariance


We can include continuous covariates to the analysis of variance, whose slope governs the relationship with the response. The strict inclusion isn't necessary to draw valid causal conclusion, but adding the term helps again reduce the residual variability. Such a design was historically called **analysis of covariance**, although as analysis of variance models, they are nothing but linear regression models. The ANCOVA model assumes that slopes are parallel: if rather there is an interaction term, then the experimental manipulation induces changes that depend on the value of the continuous explanatory. This case is termed **moderation** in the management literature.

In an analysis of covariance, we include a linear component for a (continuous) covariate, with the purpose again to reduce residual error and increase power. A prime example is prior/post experiment measurements, whereby we monitor the change in outcome due to the manipulation. This post by Solomon Kurz [[link]](https://solomonkurz.netlify.app/blog/2023-04-12-boost-your-power-with-baseline-covariates/) nicely illustrates the added benefits of using covariates when there is strong correlation between your response and the latter

In such setting, it may seem logical to take the difference in post and prior score as response: this is showcased in @exm-vanStek and @Baumann:1992, an analysis of which is presented on [the course website](https://edsm.rbind.io/example/06-ancova/). 

When we add a covariate, we need the latter to have a strong linear correlation for the inclusion to make sense. We can assess graphically whether the relationship is linear, and whether the slopes for each experimental condition are the same.^[If not, this implies that the covariate interacts with the experimental condition.]

```{r}
#| label: fig-ancovadifftrend
#| echo: false
#| eval: true
#| cache: true
#| fig-cap: "Simulated data from two groups with an analysis of covariance model. "
set.seed(123)
ng <- 24
x1 <- rgamma(n = ng, shape = 10, scale = 5)
x2 <- rgamma(n = ng, shape = 7, scale = 3)
dat <- data.frame(
  covariate = c(x1, x2),
  response = c(2 + 0.2*x1 + rnorm(ng, sd = 4), 5 + 0.4*x2 + rnorm(ng, sd = 4)),
  group = factor(rep(c("treatment", "control"), each = ng)))
g1 <- ggplot(data = dat, aes(x = covariate, y = response, group = group, color = group)) + 
  geom_point() + 
  geom_rug(sides = "b") + 
  geom_abline(data = data.frame(group = factor(c("treatment",
                                                 "control")),
                                intercept = c(2,5),
                                slope = c(0.2,0.4)),
              mapping = aes(intercept = intercept, 
                            slope = slope, 
                            color = group)) +
  theme_classic() 
set.seed(123)
ng <- 24
x1 <- rgamma(n = ng, shape = 10, scale = 5)
x2 <- rgamma(n = ng, shape = 10, scale = 5)
dat <- data.frame(
  covariate = c(x1, x2),
  response = c(2 + 0.2*x1 + rnorm(ng, sd = 4), 5 + 0.2*x2 + rnorm(ng, sd = 4)),
  group = factor(rep(c("treatment", "control"), 
                     each = ng)))
g2 <- ggplot(data = dat, 
             aes(x = covariate, 
                 y = response, 
                 group = group, 
                 color = group)) + 
  geom_point() + 
  geom_rug(sides = "b") + 
  geom_abline(data = data.frame(group = factor(c("treatment",
                                                 "control")),
                                intercept = c(2,5),
                                slope = c(0.2,0.2)),
              mapping = aes(intercept = intercept, 
                            slope = slope, 
                            color = group)) +
  theme_classic()
 
g2 + g1 + 
  plot_layout(guides = 'collect') &
  theme(legend.position = "bottom")
```

The left panel of @fig-ancovadifftrend shows the ideal situation for an analysis of covariate: the relationship between response and covariate is linear with strong correlation, with the same slope and overlapping support. Since the slopes are the same, we can compare the difference  in average (the vertical difference between slopes at any level of the covariate) because the latter is constant, so this depiction is useful. By contrast, the right-hand panel of @fig-ancovadifftrend shows an interaction between the covariate and the experimental groups, different slopes: there, the effect of the experimental condition increases with the level of the covariate. One may also note that the lack of overlap in the support, the set of values taken by the covariate, for the two experimental conditions, makes comparison hazardous at best in the right-hand panel.

@fig-ancovaresid shows that, due to the strong correlation, the variability of the measurements is smaller on the right-hand panel (corresponding to the analysis of covariance model) than for the centred response on the left-hand panel; note that the $y$-axes have different scales.


```{r}
#| label: fig-ancovaresid
#| echo: false
#| eval: true
#| cache: true
#| fig-cap: "Response after subtracting mean (left) and after detrending (right)."
g3 <- ggplot(data = dat,
             aes(color = group,
                 x = group,
                 y = response - mean(response))) +
  geom_jitter() + 
  scale_y_continuous(limits = c(-10,10), breaks = seq(-10, 10, by = 5)) +
  labs(y = "centered response",
       subtitle = "ANOVA")+
  theme_classic()
dat$resid <- resid(lm(response ~ covariate,
         data = dat))

g4 <- ggplot(data = dat,
             aes(color = group,
                 x = group,
                 y = resid)) +
  geom_jitter() +
  scale_y_continuous(limits = c(-10,10), breaks = seq(-10, 10, by = 5)) +
  labs(y = "residuals (detrended observations)",
       subtitle = "ANCOVA") +
  theme_classic()
g3 + g4 + 
  plot_layout(guides = 'collect') &
  theme(legend.position = "bottom")
```


We present two examples of analysis of covariance, showing how the inclusion of covariates helps disentangle differences between experimental conditions.

::: {#exm-leechoi}

## Inconsistency of product description and image in online retailing

@Lee.Choi:2019 measured the impact of discrepancies between descriptions and visual depiction of items in online retail. They performed an experiment in which participants were presented with descriptions of a product (a set of six toothbrushes) that was either consistent or inconsistent with the description. The authors postulated that a discrepancy could lead to lower appreciation score, measured using three Likert scales. They also suspected that the familiarity with the product brand should impact ratings, and controlled for the latter using another question.


One way to account for familiarity when comparing the mean is to use a linear regression with familiarity as another explanatory variable. The expected value of the product evaluation is
$$
\mathsf{E}(\texttt{prodeval}) = \beta_0 + \beta_1 \texttt{familiarity} + \beta_2 \texttt{consistency}, 
$$ {#eq-vS}
where $\texttt{familiarity}$ is the score from 1 to 7 and $\texttt{consistency}$ is a binary indicator equal to one if the output is inconsistent and zero otherwise. 
The coefficient $\beta_2$ thus measures the difference between product evaluation rating for consistent vs inconsistent displays, for the same familiarity score.



```{r}
#| label: LC19-linreg
#| eval: true
#| echo: false
# Load data
data(LC19_S1, package = "hecedsm")
# Fit a linear regression
ancova <- lm(prodeval ~ familiarity + consistency,
             data = LC19_S1)
# Output coefficients and t-tests
#summary(ancova)
# Anova table
#car::Anova(ancova, type = 3)
```



We can look at coefficient (standard error) estimates $\widehat{\beta}_2 = `r round(coef(ancova)[3], 2)` (`r round( as.numeric(sqrt(diag(vcov(ancova)))[3]),3)`)$.
No difference between groups would mean $\beta_2=0$ and we can build a test statistic by looking at the standardized regression coefficient $t = \widehat{\beta}_2/\mathsf{se}(\widehat{\beta}_2)$. The result output is `r papaja::apa_print(ancova)$full_result$consistencyinconsistent`. We reject the null hypothesis of equal product evaluation for both display at level 5%: there is evidence that there is a small difference, with people giving on average a score that is 0.64 points smaller (on a scale of 1 to 9) when presented with conflicting descriptions and images.

We can compare the analysis of variance table obtained by fitting the model with and without $\texttt{familiarity}$. @tbl-anovatabLC19S1 shows that the effect of consistency is small and not significant and a two-sample _t_-test shows no evidence of difference between the average familiarity score in both experimental conditions ($p$-value of $`r papaja::apa_p(broom::tidy(anova(aov(familiarity ~ consistency, data = LC19_S1)))$p.value)[1]`$). However, we can explain roughly one fifth of the residual variability by the familiarity with the brand (see the sum of squares in @tbl-anovatabLC19S1): removing the latter leads to a higher signal-to-noise ratio  for the impact of consistency, at the expense of a loss of one degree of freedom. Thus, it appears that the manipulation was successful.


```{r}
#| label: tbl-anovatabLC19S1
#| echo: false
#| eval: true
#| tbl-cap: "Analysis of variance tables"
data(LC19_S1, package = "hecedsm")
anovaMod <- lm(prodeval ~ consistency,
             data = LC19_S1)
ancovaMod <- lm(prodeval ~ familiarity + consistency,
             data = LC19_S1)
options(knitr.kable.NA = '')
tab_anova <- broom::tidy(
    car::Anova(anovaMod, type = 3)[-1,])
tab_anova$p.value <- papaja::apa_p(tab_anova$p.value)
tab_ancova <-  broom::tidy(
  car::Anova(ancovaMod, type = 3)[-1,])
tab_ancova$p.value <- papaja::apa_p(tab_ancova$p.value)
# Output coefficients and t-tests
knitr::kable(tab_anova,
  col.names = c("term","sum. sq.", "df","stat","p-value"),
  digits = c(0,2,1,2,3,3), booktabs = TRUE,
  caption = "model without familiarity")
knitr::kable(tab_ancova,
  col.names = c("term","sum. sq.", "df","stat","p-value"),
  digits = c(0,2,1,2,3,3), booktabs = TRUE,
  caption = "model with familiarity")
```



```{r}
#| label: fig-ANCOVA-demo
#| fig-cap: "Scatterplot of product evaluation as a function of the familiarity score, split by experimental manipulation."
#| eval: true
#| echo: false
#| out-width: '70%'
#| fig-width: 8
#| fig-height: 6
#| message: false
#| warning: false
set.seed(1234)
data(LC19_S1, package = "hecedsm")
ggplot(data = LC19_S1, 
       mapping = aes(y = prodeval, 
                     x = familiarity, 
                     col = consistency)) + 
  geom_point(position = "jitter") + 
  geom_smooth(method = "lm", 
              formula = y ~ x,
              show.legend = FALSE,
              fullrange = TRUE,
              se = FALSE) +
  scale_y_continuous(limits = c(1,9),
                     breaks = c(3L, 6L, 9L)) +
  scale_x_continuous(limits = c(3,7),
                    breaks = 1:7) + 
  theme_classic() + 
  theme(legend.position = "bottom") +
  labs(y = "product evaluation",
       col = "display")
```

@fig-ANCOVA-demo shows that people more familiar with the product or brand tend to have a more positive product evaluation, as postulated by the authors. The graph also shows two straight lines corresponding to the fit of a linear model with different intercept and slope for each display group: there is little material difference, one needs to assess formally whether a single linear relationship as the one postulated in @eq-vS can adequately characterize the relation in both groups. 

To this effect, we fit a linear model with different slopes in each group, and compare the fit of the latter with the analysis of covariance model that includes a single slope for both groups: we can then test if the slopes are the same, or alternatively if the difference between the slopes is zero. The _t_-statistic indicates no difference in slope ($p$-value of $`r papaja::apa_p(broom::tidy(anova(lm(prodeval ~ familiarity + consistency, data = LC19_S1), lm(prodeval ~ familiarity*consistency, data = LC19_S1)))$p.value)[2]`$), thus the assumption is reasonable. Levene's test for homogeneity of variance indicates no discernible difference between groups. Thus, it appears there is a difference in perception of product quality due to the manipulation.




:::

::: {#exm-vanStek}

## Effect of scientific consensus on false beliefs

We consider Study 3 of @vanStekelenburg:2021, who studied changes in perception of people holding false beliefs or denying (to some extent) the scientific consensus by presenting them with news article showcasing information about various phenomena. The experimental manipulation consisted in presenting boosting, a form of training to help readers identify and establish whether scientifists were truly expert in the domain of interest, how strong was the consensus, etc.^[The article is interesting because lack of planning/changes led them to adapt the design from experiment 1 to 3 until they found something. Without preregistration, it is unlikely such findings would have been publishable.]

The third and final experiment of the paper focused on genetically modified organisms: it is a replication of Study 2, but with a control group (since there were no detectable difference between experimental conditions `Boost` and `BoostPlus`) and a larger sample size (because Study 2 was underpowered). 

The data include 854 observations with `prior`, the negative of the prior belief score of the participant, the `post` experiment score for the veracity of the claim. Both were measured using a visual scale ranging from -100  (I am 100% certain this is false) to 100  (I am 100% certain this is true), with 0 (I don’t know) in the middle. Only people with negative prior beliefs were recruited to the study. The three experimental conditions were `BoostPlus`, `consensus` and a `control` group. Note that the scores in the data have been negated, meaning that negative posterior scores indicate agreement with the consensus on GMO.

```{r}
#| label: SSVB21S3-fit
#| eval: true
#| echo: false
library(emmeans)
library(nlme)
data(SSVB21_S3, package = "hecedsm")

# ANOVA model
SSVBmod0 <- lm(post ~ condition, 
                 data = SSVB21_S3)
# ANCOVA model (with prior as covariate)
SSVBmod1 <- lm(post ~ prior + condition, 
                 data = SSVB21_S3)
# Check equality of slope (ok)
SSVBmod2 <- lm(post ~ prior*condition, 
                 data = SSVB21_S3)
#anova(SSVBmod1, SSVBmod2)

# Check randomization (ok)
SSVBmod3 <- lm(prior ~ condition, 
               data = SSVB21_S3)
# Check equal variance per group (nope)
levene <-  
  car::leveneTest(resid(SSVBmod1) ~ condition, 
                  data = SSVB21_S3)

m1 <- nlme::gls(
  post ~ prior + condition, 
  weights = varIdent(form = ~1 | condition),
  data = SSVB21_S3, 
  method = "ML")
m2 <- nlme::gls(
  post ~ prior + condition, 
  data = SSVB21_S3, 
  method = "ML")
# anova(m1, m2)
# Clear heteroscedasticity...

# Fit a model with different variances
library(nlme)
SSVBmod4 <- nlme::gls(
  post ~ prior + condition, 
  weights = varIdent(form = ~1 | condition),
  data = SSVB21_S3)

# Compare model with unequal variance with 
# model with equal variance (bis), 
# this time with likelihood ratio test

SSVBmod5 <- gls(
  post ~ condition, 
  weights = varIdent(form = ~ 1 |condition),
  data = SSVB21_S3)

# Contrasts
emm4 <- emmeans(SSVBmod4, specs = "condition")
emm5 <- emmeans(SSVBmod5, specs = "condition")
# Note order: Boost, consensus, control

# Not comparable: 
# emm4 uses detrended data,
# emm5 uses group averages
#
# Compute planned contrasts
contrast_list <- list(
  "consensus vs control" = c(0,  1, -1), 
  "consensus vs BoostPlus" = c(-1, 1,  0),
  "BoostPlus vs control " =  c(1, 0, -1)) 
c4 <- contrast(emm4,
         method = contrast_list,
         p.adjust = "holm")
# Without controlling for prior beliefs
c5 <- contrast(emm5,
         method = contrast_list,
         p.adjust = "holm")
```

Preliminary checks suggest that, although the slopes for prior beliefs could plausibly be the same in each group and the data are properly randomized, there is evidence of unequal variance for the changes in score. As such, we fit a model with mean
\begin{align*}
\mathsf{E}(\texttt{post}) &= \begin{cases}
\beta_0 + \beta_1 \texttt{prior} + \alpha_1 &  \texttt{condition} = \texttt{BoostPlus}\\
\beta_0 + \beta_1 \texttt{prior} + \alpha_2 &\texttt{condition} = \texttt{consensus}\\
\beta_0 + \beta_1 \texttt{prior} + \alpha_3 &\texttt{condition} = \texttt{control}
\end{cases}
\end{align*}
with $\alpha_1 + \alpha_2 + \alpha_3=0$, using the sum-to-zero parametrization, and with different variance for each experimental condition, 
\begin{align*}
\mathsf{Va}(\texttt{post}) = \begin{cases}
\sigma^2_1, &  \texttt{condition} = \texttt{BoostPlus},\\
\sigma^2_2, &  \texttt{condition} = \texttt{consensus},\\
\sigma^2_3, & \texttt{condition} = \texttt{control}.
\end{cases}
\end{align*}
Because of the unequal variances, we cannot use multiple testing procedures reserved for analysis of variance and resort instead to Holm--Bonferroni to control the familywise error rate. We here look only at pairwise differences between conditions.^[In Study 2, the interest was comparing manipulation vs control and the Boost vs BoostPlus conditions, two orthogonal contrasts.]
 
 
```{r}
#| label: tbl-anovatabSSVB
#| echo: false
#| eval: true
#| tbl-cap: "Analysis of variance tables"
options(knitr.kable.NA = '')
tab_anova <- broom::tidy(
    car::Anova(SSVBmod5, type = 3)[-1,])
tab_anova$p.value <- papaja::apa_p(tab_anova$p.value)
tab_ancova <-  broom::tidy(
  car::Anova(SSVBmod4, type = 3)[-1,])
tab_ancova$p.value <- papaja::apa_p(tab_ancova$p.value)
# Output coefficients and t-tests
knitr::kable(tab_anova,
             booktabs = TRUE,
             caption = "ANOVA model (without prior belief)",
             col.names = c("term","df","stat","p-value"),
             digits = c(0,2,1,2))
knitr::kable(tab_ancova,
             booktabs = TRUE,
             caption = "ANCOVA model (with prior belief)",
             col.names = c("term","df","stat","p-value"),
             digits = c(0,2,1,2))
```

Repeating the exercise of comparing the amount of evidence for comparison with and without inclusion of a covariate shows that the value of the test statistic is larger (@tbl-anovatabSSVB), indicative of stronger evidence with the analysis of covariance model: the conclusion would be unaffected with such large sample sizes. We of course care very little for the global $F$ test of equality of mean, as the previous study had shown large differences. What is more interesting here is quantifying the change between conditions.


```{r}
#| label: tbl-contraststabSSVB
#| echo: false
#| tbl-cap: "Pairwise contrasts with _p_-values adjusted using Holm--Bonferroni"
#| eval: true
options(knitr.kable.NA = '')
tab_anova <- broom::tidy(c5) |> dplyr::select(!c("term","null.value"))
tab_anova$p.value <- papaja::apa_p(tab_anova$p.value)
tab_ancova <-  broom::tidy(c4) |> dplyr::select(!c("term","null.value"))
tab_ancova$p.value <- papaja::apa_p(tab_ancova$p.value)
# Output coefficients and t-tests
knitr::kable(tab_anova,
             booktabs = TRUE,
  digits = c(0,2,1,2,3,3),
  
  caption = "ANOVA model (without prior belief score).")

knitr::kable(tab_ancova,
             booktabs = TRUE,
  digits = c(0,2,1,2,3,3),
  caption = "ANCOVA model (with prior belief score).")
```

@tbl-contraststabSSVB shows the pairwise contrasts, which measure two different things: the analysis of variance model compares the average in group, whereas the analysis of covariance (the linear model with `prior`) uses detrended values and focuses on the change in perception. Because the data are unbalanced and we estimate group mean and variance separately, the degrees of freedom change from one pairwise comparison to the next. Again, using the covariate `prior`, which is somewhat strongly correlated with `post` as seen in @fig-vanStekS3, helps decrease background noise.

```{r}
#| label: tbl-vanStekS3
#| eval: true
#| echo: false
#| message: false
#| warning: false
#| tbl-cap: "Summary statistics of belief as a function of time of measurement and experimental condition."
# Transform data so that all observations
# measurements are in a single column
# post/prior become labels of a categorical variable
SSVB21_S3_long <- SSVB21_S3 |>
  tidyr::pivot_longer(cols = c("prior","post"),
               names_to = "time",
               values_to = "belief") |>
  dplyr::mutate(time = relevel(factor(time),
                        ref = "prior"))
# Compute summary statistics by group
# average and its standard error = std.dev / sqrt(n)
SSVB21_S3_summary <- SSVB21_S3_long |>
  dplyr::group_by(time, condition) |>
  dplyr::summarize(mean = mean(belief),
            se = sd(belief)/sqrt(dplyr::n()))

knitr::kable(SSVB21_S3_summary, 
            digits = 2,
            booktabs = TRUE, 
            linesep = "")
```


```{r}
#| label: fig-vanStekS3
#| eval: true
#| echo: false
#| fig-cap: "Difference between prior and post experiment beliefs on genetically engineered food."
# Create a plot of data by timing
# jitter observations to avoid overlay
ggplot(data = SSVB21_S3_summary,
       # Aesthetics common to all
       aes(x = time,
           group = condition)) +
  geom_point(data = SSVB21_S3_long,
             mapping = aes(x = time,
                           y = belief,
                           col = condition,
                           group = condition),
             position = position_jitterdodge(jitter.width = 0.25)) +
  # Add plus or one standard error for the mean
  geom_linerange(data = SSVB21_S3_summary,
                 aes(ymin = mean - se,
                     ymax = mean + se),
                 position = position_dodge(width = 0.75)) +
  # Add a line for each group mean
  geom_errorbar(data = SSVB21_S3_summary,
                aes(x = time,
                    ymax = mean,
                    ymin = mean,
                    color = condition),
                position = position_dodge(width = 0.75)) +
  # Add lines for each group (prior to post)
  geom_line(data = SSVB21_S3_summary,
            mapping =
              aes(x = time,
                  group = condition,
                  color = condition,
                  y = mean),
    position = position_dodge(0.75)
  ) +
  theme_classic() +
  theme(legend.position = "bottom")

```


:::


:::{.callout-caution}
@vanStekelenburg:2021 split their data to do pairwise comparisons two at the time (thus taking roughly two-third of the data to perform a two sample _t_-test with each pair). Although it does not impact their conclusion, this approach is conceptually incorrect: if the variance was equal, we would want to use all observations to estimate it (so their approach would be suboptimal, since we would estimate the variance three times with smaller samples).

On the contrary, using a model that assumes equal variance when it is not the case leads to distortion: the variance we estimate will be some sort of average of the variability $\sigma_i$ and $\sigma_j$ in experimental condition $i$ and $j$, again potentially leading to distortions. With large samples, this may be unconsequential, but illustrates caveats of subsample analyses.


:::

:::{.callout-caution}

@fig-vanStekS3f1 shows the relationship between prior and posterior score. The data show clear difference between individuals: many start from completely disbelieving of genetically engineered food and change their mind (sometimes drastically), there are many people who do not change idea at all and have similar scores, and many who give a posterior score of zero. This heterogeneity in the data illustrates the danger of only looking at the summary statistics and comparing averages. It does not tell the whole picture! One could investigate whether the strength of religious or political beliefs, or how much participants trust scientists, could explain some of the observed differences.

:::

```{r}
#| label: fig-vanStekS3f1
#| echo: false
#| eval: true
#| out-width: '80%'
#| fig-cap: "Scatterplot of negated prior and posterior belief score."
# Scatterplot of data
ggplot(data = SSVB21_S3,
       aes(x = prior,
           y = post)) +
  geom_point(aes(col = condition)) +
  # geom_smooth(method = "lm",
  #             se = FALSE,
  #             col = "black") +
  theme_classic() +
  theme(legend.position = "bottom")
```


## Moderation and interactions

In a randomized experiment, we can check the average outcome of a manipulation by comparing groups: assuming random sampling, these conclusions can be broadly generalized to the population of interest from which the sample is drawn. However, it may be that the effect of the treatment depends on other variables: cultural differences, gender or education may change.

The causal effect on $Y$ of the experimental manipulation, say $X$ may be a misleading summary if another variable modifies the relation of $X \to Y$: for example, the perception of gender discrimination or racism may depend on the person background and experience and this may impact the effect of the manipulation. Such variables, say $W$, thus have an interactive effect with the experimental factor $X$, termed moderator in psychology. In the statistical model, inclusion of interaction terms between $X$ and $W$ (typically via product of the so-called moderator variable with the factor encoding the experimental sub-condition) will allow us to estimate those differences.

In an analysis of covariance, covariates are included that have an impact on the outcome to filter out variability, but with the assumption that they do not influence the effect of treatment (no interaction). With moderators, we rather include and tests for the interactions. If we have an experimental factor $X$ which is binary or categorical, the resulting model is a simple analysis of variance model (or analysis of covariance) and we can test the significance of the interaction term to assess the moderating effect of $W$.

If $W$ is a mean-centered continuous variable and $X$ a categorical variable with $k=1, \ldots, K$ levels using the sum-to-zero parametrization, the linear model with mean
$$
\underset{\text{average response at $W$ in group $k$}}{\mathsf{E}\{Y \mid \mathsf{do}(X) = k, W\}} = \underset{\text{intercept for group $k$}}{\mu + \alpha_k} + \underset{\text{slope for group $k$}}{(\beta + \gamma_k)}W
$$
includes different slopes for $W$ in each experimental group, as well as different intercepts for each group.

As an example, we consider data from a study on gender discrimination [@Garcia:2010]. Participants were put with a file where a women was turned down promotion in favour of male colleague despite her being clearly more experimented and qualified. The authors manipulated the decision of the participant to this decision, either choosing not to challenge the decision (no protest), a request to reconsider based on individual qualities of the applicants (individual) and a request to reconsider based on abilities of women (collective). All items were measured using scales constructed using items measured using Likert scales ranging from strongly disagree (1) to strongly agree (7).

The postulated mediator variable is `sexism`, the average of 6 Likert scales for the Modern Sexism Scale assessing pervasiveness of gender discrimination. We consider participants' evaluation of the appropriateness of the response of the fictional character.

We fit the linear model with the interaction and display the observed slopes

```{r}
#| eval: false
#| echo: true
data(GSBE10, package = "hecedsm")
lin_moder <- lm(respeval ~ protest*sexism,
               data = GSBE10)
summary(lin_moder) # coefficients
car::Anova(lin_moder, type = 3) # tests
```

```{r}
#| label: tbl-testsmoder
#| echo: false
#| eval: true
#| message: false
#| warning: false
#| tbl-cap: "Analysis of variance table for the linear moderation model."
data(GSBE10, package = "hecedsm")
linmoder <- lm(respeval ~ protest*sexism,
               data = GSBE10)
# summary(linmoder) # coefficients

options(knitr.kable.NA = '')
tab_anova <- broom::tidy(
    car::Anova(linmoder, type = 3)[-1,])
tab_anova$p.value <- papaja::apa_p(tab_anova$p.value)
knitr::kable(tab_anova,
  booktabs = TRUE,
  col.names = c("term", "sum of squares","df","stat","p-value"),
  digits = c(0,2,1,2,3,3))
```

```{r}
#| eval: true
#| echo: false
#| warning: false
#| message: false
#| out-width: '80%'
ggplot(data = GSBE10,
       aes(x = sexism,
           y = respeval,
           color = protest,
           group = protest)) +
  geom_point() +
  geom_smooth(se = FALSE, method = "lm", formula = y ~ x) +
  labs(subtitle = "evaluation of response",
       y = "",
       color = "experimental condition") +
  theme_classic() +
  theme(legend.position = "bottom")
```

Because of the interaction, comparing the levels of the experimental factor only makes sense if we fix the value of sexism (since the slopes are not parallel) and won't necessarily be reliable outside of the range of observed values of sexism. We could look at quantiles and differences at the mean sexism,^[This is the default with `emmeans`] or one standard deviation away.

We may be interested in the range of values of the predictor $W$ for which the difference between treatments is not statistically significant if we only have a binary treatment. The Johnson--Neyman method [@Johnson.Neyman:1936] considers this range, but this leads to multiple testing problems since we probe the model repeatedly. @Esarey.Sumner:2018 offer a method that provides control for the false discovery rate.

To illustrate the method, we dichotomize the manipulation pooling individual and collective protests, since these are the most similar.

```{r}
#| eval: true
#| echo: true
#| fig-cap: "Johnson--Neyman plot for difference between protest and no protest as a function of sexism."
#| label: fig-jn
library(interactions)
db <- GSBE10 |>
  dplyr::mutate(
    protest = as.integer(protest != "no protest"))
lin_moder2 <- lm(respeval ~ protest*sexism, data = db)
jn <- johnson_neyman(
  model = lin_moder2, # linear model
  pred = protest, # binary experimental factor
  modx = sexism, # moderator
  control.fdr = TRUE,
  mod.range = range(db$sexism))
jn$plot
```


The cutoff value is 4.20 with control for the false discovery rate and 4.15 without. The interval is not extended beyond the range of value for sexism, as these are not possible given the Likert scale (which starts at 1). In this example, the moderator is not experimentally manipulated, but it could be. More complicated mediation models could include interactions between treatment effects or moderators and covariates, with external variables, leading to moderated mediation. Interactions can be considered for pretty much any statistical model, but the usual assumptions need to hold for inference to be approximately valid.





:::{.callout-important}

## **Summary**

* Inclusion of continuous covariates may help filtering out unwanted variability.
* These are typically concomitant variables (measured alongside the response variable).
* This designs reduce the residual error, leading to an increase in power (more ability to detect differences in average between experimental conditions).
* We are only interested in differences due to experimental condition (marginal effects).
* In general, there should be no interaction between covariates/blocking factors and experimental conditions. 
* This hypothesis can be assessed by comparing the models with and without interaction, if there are enough units (e.g., equality of slope for ANCOVA).
* Moderators are variables that interact with the experimental factor. We assess their presence by testing for an interaction in a linear regresison model.

:::

